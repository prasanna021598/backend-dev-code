pipeline {
    agent{
         label 'jenkins-agent'
    }
    options {
        // Timeout counter starts AFTER agent is allocated
        timeout(time: 30, unit: 'MINUTES')
    }
     environment {
        NEXUS_URL = 'nexus.itindustry.online:8081' // Replace with your Nexus URL and repository name
        NEXUS_CREDENTIALS_ID = 'nexus-cred' // Use the ID of the credentials you added
        //VERSION = "1.0.${BUILD_NUMBER}" // Example of using build number
    }

    stages {
        stage('Install dependencies') {
            steps {
                sh """
                    npm install
                    ls -ltr
                """
            }
        }
        stage('Zipping the code') {
            steps {
                sh """
                zip -r backend.zip * -x jenkinsfile 
                """
            }
        }

        stage('Sonar Scan') {
            environment {
                scannerHome = tool 'sonar-06' //refering scanner cli , got from geeks for geeks
            }
            steps {
                script {
                    withSonarQubeEnv('sonar-06') {
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
            }
        }
        }
    
        stage('Upload to Nexus') {
            steps {
                script {
                    nexusArtifactUploader(
                        artifacts: [[
                            artifactId: 'backend', // Replace with your artifact ID
                            classifier: '',
                            file: "backend.zip",
                            type: 'zip'
                        ]],
                        credentialsId: "${env.NEXUS_CREDENTIALS_ID}",
                        groupId: 'com.expense', // Replace with your group ID
                        nexusUrl: "${env.NEXUS_URL}",
                        protocol: 'http',
                        repository: 'backend-expense', // Replace with your repository name
                        //version: "${env.VERSION}"
                        nexusVersion: "nexus3"
                    )

                }
            }
        }
    }
    
}